From c985f25c3f084fb24de70e45c0bf8c18c94462f8 Mon Sep 17 00:00:00 2001
From: cjybyjk <cjybyjk@users.noreply.github.com>
Date: Fri, 3 Jun 2022 19:53:23 +0800
Subject: [PATCH] udfps: Implement framework dimming support [Lynnrin]: Adapt
 for Android 12.1

---
 .../SystemUI/res/values/krypton_config.xml    | 25 +++++++++
 .../systemui/biometrics/UdfpsController.java  | 56 +++++++++++++++++++
 2 files changed, 81 insertions(+)

diff --git a/packages/SystemUI/res/values/krypton_config.xml b/packages/SystemUI/res/values/krypton_config.xml
index 29ba8be8..97dc0ac7 100644
--- a/packages/SystemUI/res/values/krypton_config.xml
+++ b/packages/SystemUI/res/values/krypton_config.xml
@@ -45,4 +45,29 @@
 
     <!-- Allow devices override audio panel location to the left side -->
     <bool name="config_audioPanelOnLeftSide">false</bool>
+
+    <!-- Flag to enable framework dimming for udfps -->
+    <bool name="config_udfpsFrameworkDimming">false</bool>
+
+    <!-- Array of brightness-alpha lut for framework dimming -->
+    <string-array name="config_udfpsDimmingBrightnessAlphaArray" translatable="false">
+          <!-- Example:
+          <item>0,255</item>
+          <item>1,234</item>
+          <item>3,227</item>
+          <item>8,208</item>
+          <item>16,192</item>
+          <item>27,176</item>
+          <item>41,160</item>
+          <item>61,144</item>
+          <item>80,128</item>
+          <item>104,112</item>
+          <item>130,96</item>
+          <item>158,80</item>
+          <item>188,64</item>
+          <item>221,48</item>
+          <item>250,36</item>
+          <item>255,33</item>
+          -->
+    </string-array>
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index 585e5858..123f9dba 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -48,6 +48,7 @@ import android.os.Process;
 import android.os.RemoteException;
 import android.os.Trace;
 import android.os.UserHandle;
+import android.provider.Settings;
 import android.os.VibrationEffect;
 import android.os.Vibrator;
 import android.provider.Settings;
@@ -177,6 +178,9 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
     private boolean mScreenOffFod = false;
     private boolean mUdfpsStartHapticFeedbackEnabled = true;
 
+    private boolean mFrameworkDimming;
+    private int[][] mBrightnessAlphaArray;
+
     @VisibleForTesting
     public static final AudioAttributes VIBRATION_SONIFICATION_ATTRIBUTES =
             new AudioAttributes.Builder()
@@ -641,6 +645,11 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
         mCoreLayoutParams.layoutInDisplayCutoutMode =
                 WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS;
         mCoreLayoutParams.privateFlags = WindowManager.LayoutParams.PRIVATE_FLAG_TRUSTED_OVERLAY;
+        mCoreLayoutParams.dimAmount = 0;
+
+        mFrameworkDimming = mContext.getResources().getBoolean(R.bool.config_udfpsFrameworkDimming);
+
+        parseBrightnessAlphaArray();
 
         mFingerprintManager.setUdfpsOverlayController(new UdfpsOverlayController());
 
@@ -761,6 +770,7 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
         final int paddingY = animation != null ? animation.getPaddingY() : 0;
 
         mCoreLayoutParams.flags = Utils.FINGERPRINT_OVERLAY_LAYOUT_PARAM_FLAGS
+                | WindowManager.LayoutParams.FLAG_DIM_BEHIND
                 | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH;
         if (animation != null && animation.listenForTouchesOutsideView()) {
             mCoreLayoutParams.flags |= WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH;
@@ -1044,6 +1054,8 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
             return;
         }
 
+        updateViewDimAmount(true);
+
         if (mView.getAnimationViewController() instanceof UdfpsKeyguardViewController
                 && !mStatusBarStateController.isDozing()) {
             mKeyguardBypassController.setUserHasDeviceEntryIntent(true);
@@ -1088,6 +1100,7 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
         if (mView.isIlluminationRequested()) {
             mView.stopIllumination();
         }
+        updateViewDimAmount(false);
     }
 
     private void updateTouchListener() {
@@ -1121,6 +1134,49 @@ public class UdfpsController implements DozeReceiver, UdfpsHbmProvider {
         }
     }
 
+    private static int interpolate(int x, int xa, int xb, int ya, int yb) {
+        return ya - (ya - yb) * (x - xa) / (xb - xa);
+    }
+
+    private void updateViewDimAmount(boolean pressed) {
+        if (mFrameworkDimming) {
+            if (pressed) {
+                int curBrightness = Settings.System.getInt(mContext.getContentResolver(),
+                        Settings.System.SCREEN_BRIGHTNESS, 100);
+                int i, dimAmount;
+                for (i = 0; i < mBrightnessAlphaArray.length; i++) {
+                    if (mBrightnessAlphaArray[i][0] >= curBrightness) break;
+                }
+                if (i == 0) {
+                    dimAmount = mBrightnessAlphaArray[i][1];
+                } else if (i == mBrightnessAlphaArray.length) {
+                    dimAmount = mBrightnessAlphaArray[i-1][1];
+                } else {
+                    dimAmount = interpolate(curBrightness,
+                            mBrightnessAlphaArray[i][0], mBrightnessAlphaArray[i-1][0],
+                            mBrightnessAlphaArray[i][1], mBrightnessAlphaArray[i-1][1]);
+                }
+                mCoreLayoutParams.dimAmount = dimAmount / 255.0f;
+            } else {
+                mCoreLayoutParams.dimAmount = 0;
+            }
+            mWindowManager.updateViewLayout(mView, mCoreLayoutParams);
+        }
+    }
+
+    private void parseBrightnessAlphaArray() {
+        if (mFrameworkDimming) {
+            String[] array = mContext.getResources().getStringArray(
+                    R.array.config_udfpsDimmingBrightnessAlphaArray);
+            mBrightnessAlphaArray = new int[array.length][2];
+            for (int i = 0; i < array.length; i++) {
+                String[] s = array[i].split(",");
+                mBrightnessAlphaArray[i][0] = Integer.parseInt(s[0]);
+                mBrightnessAlphaArray[i][1] = Integer.parseInt(s[1]);
+            }
+        }
+    }
+
     /**
      * Callback for fingerUp and fingerDown events.
      */
-- 
2.36.1

