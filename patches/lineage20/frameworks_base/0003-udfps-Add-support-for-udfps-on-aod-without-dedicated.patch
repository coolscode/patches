From 0fe850665dcd4025e934566100a04e41cce3829b Mon Sep 17 00:00:00 2001
From: TheScarastic <warabhishek@gmail.com>
Date: Sat, 8 Oct 2022 16:12:57 +0800
Subject: [PATCH 3/4] udfps: Add support for udfps on aod without dedicated
 sensor

[@markakash]: See, Google updated the onAcquiredGood to something more generic (onAcquired, with an acquiredInfo parameter) so the UdfpsOverlay can turn off HBM for the appropriate acquiredInfo messages. We are bascially adapting vendorCode to this method
Change-Id: I4aa39efe3714bcc40ab3da862809ca9c8974c6bd

This is squashed with the following commit:
Author: TheScarastic <warabhishek@gmail.com>
Date:   Sun Aug 21 18:40:57 2022 +0700

    udfps: Make AOD vendor code overlayable.

    Change-Id: If1aff1d0abb158487f7c99eba95124a2a9372c4f

Test: test udfps on AOD without dedicated sensor
Change-Id: I4b469b18bb6d2892914610274174224089b40e1b
Signed-off-by: Akash Srivastava <akashniki@gmail.com>
Signed-off-by: str-br <alexfinhart@gmail.com>
Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>
---
 .../BiometricFingerprintConstants.java          |  3 ---
 .../fingerprint/IUdfpsOverlayController.aidl    |  2 +-
 packages/SystemUI/res/values/lineage_config.xml |  3 +++
 .../systemui/biometrics/UdfpsController.java    | 17 ++++++++++++++++-
 .../aidl/FingerprintAuthenticationClient.java   |  2 +-
 .../aidl/FingerprintEnrollClient.java           |  2 +-
 .../hidl/FingerprintAuthenticationClient.java   | 11 +++++++++++
 7 files changed, 33 insertions(+), 7 deletions(-)

diff --git a/core/java/android/hardware/biometrics/BiometricFingerprintConstants.java b/core/java/android/hardware/biometrics/BiometricFingerprintConstants.java
index d8ebb628..eaf8ab25 100644
--- a/core/java/android/hardware/biometrics/BiometricFingerprintConstants.java
+++ b/core/java/android/hardware/biometrics/BiometricFingerprintConstants.java
@@ -319,9 +319,6 @@ public interface BiometricFingerprintConstants {
             case FINGERPRINT_ACQUIRED_IMMOBILE:
             case FINGERPRINT_ACQUIRED_TOO_BRIGHT:
             case FINGERPRINT_ACQUIRED_VENDOR:
-                // Bad image captured. Turn off HBM. Matcher will not run, so there's no need to
-                // keep HBM on.
-                return true;
             case FINGERPRINT_ACQUIRED_UNKNOWN:
             default:
                 return false;
diff --git a/core/java/android/hardware/fingerprint/IUdfpsOverlayController.aidl b/core/java/android/hardware/fingerprint/IUdfpsOverlayController.aidl
index dbb8e40f..8adda2f8 100644
--- a/core/java/android/hardware/fingerprint/IUdfpsOverlayController.aidl
+++ b/core/java/android/hardware/fingerprint/IUdfpsOverlayController.aidl
@@ -31,7 +31,7 @@ oneway interface IUdfpsOverlayController {
     // Check acquiredInfo for the acquired type (BiometricFingerprintConstants#FingerprintAcquired).
     // Check BiometricFingerprintConstants#shouldTurnOffHbm for whether the acquiredInfo
     // should turn off HBM.
-    void onAcquired(int sensorId, int acquiredInfo);
+    void onAcquired(int sensorId, int acquiredInfo, int vendorCode);
 
     // Notifies of enrollment progress changes.
     void onEnrollmentProgress(int sensorId, int remaining);
diff --git a/packages/SystemUI/res/values/lineage_config.xml b/packages/SystemUI/res/values/lineage_config.xml
index 05de3d42..b0510217 100644
--- a/packages/SystemUI/res/values/lineage_config.xml
+++ b/packages/SystemUI/res/values/lineage_config.xml
@@ -31,6 +31,9 @@
     <!-- Udfps HBM provider class name -->
     <string name="config_udfpsHbmProviderComponent">com.android.systemui.biometrics.DummyUdfpsHbmProvider</string>
 
+    <!-- Udfps vendor code -->
+    <integer name="config_udfpsVendorCode">0</integer>
+
     <!-- Doze: does the double tap sensor need a proximity check? -->
     <bool name="doze_double_tap_proximity_check">false</bool>
 
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index 52bf47be..1f11ebaa 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -19,6 +19,8 @@ package com.android.systemui.biometrics;
 import static android.hardware.biometrics.BiometricFingerprintConstants.FINGERPRINT_ACQUIRED_GOOD;
 import static android.hardware.biometrics.BiometricOverlayConstants.REASON_AUTH_KEYGUARD;
 
+import static android.hardware.biometrics.BiometricFingerprintConstants.FINGERPRINT_ACQUIRED_VENDOR;
+
 import static com.android.internal.util.Preconditions.checkNotNull;
 import static com.android.systemui.classifier.Classifier.UDFPS_AUTHENTICATION;
 
@@ -52,6 +54,7 @@ import android.view.accessibility.AccessibilityManager;
 import com.android.internal.annotations.VisibleForTesting;
 import com.android.internal.util.LatencyTracker;
 import com.android.keyguard.KeyguardUpdateMonitor;
+import com.android.systemui.R;
 import com.android.systemui.animation.ActivityLaunchAnimator;
 import com.android.systemui.biometrics.dagger.BiometricsBackground;
 import com.android.systemui.dagger.SysUISingleton;
@@ -165,6 +168,7 @@ public class UdfpsController implements DozeReceiver {
     private boolean mOnFingerDown;
     private boolean mAttemptedToDismissKeyguard;
     private final Set<Callback> mCallbacks = new HashSet<>();
+    private final int mUdfpsVendorCode;
 
     @VisibleForTesting
     public static final VibrationAttributes VIBRATION_ATTRIBUTES =
@@ -227,7 +231,7 @@ public class UdfpsController implements DozeReceiver {
         @Override
         public void onAcquired(
                 int sensorId,
-                @BiometricFingerprintConstants.FingerprintAcquired int acquiredInfo
+                @BiometricFingerprintConstants.FingerprintAcquired int acquiredInfo, int vendorCode
         ) {
             if (BiometricFingerprintConstants.shouldTurnOffHbm(acquiredInfo)) {
                 boolean acquiredGood = acquiredInfo == FINGERPRINT_ACQUIRED_GOOD;
@@ -246,6 +250,16 @@ public class UdfpsController implements DozeReceiver {
                         mOverlay.onAcquiredGood();
                     }
                 });
+            } else {
+                boolean acquiredVendor = acquiredInfo == FINGERPRINT_ACQUIRED_VENDOR;
+                if (!acquiredVendor || (!mStatusBarStateController.isDozing() && mScreenOn)) {
+                    return;
+                }
+                if (vendorCode == mUdfpsVendorCode) {
+                    mPowerManager.wakeUp(mSystemClock.uptimeMillis(),
+                            PowerManager.WAKE_REASON_GESTURE, TAG);
+                    onAodInterrupt(0, 0, 0, 0);
+                }
             }
         }
 
@@ -663,6 +677,7 @@ public class UdfpsController implements DozeReceiver {
 
         udfpsHapticsSimulator.setUdfpsController(this);
         udfpsShell.setUdfpsOverlayController(mUdfpsOverlayController);
+        mUdfpsVendorCode = mContext.getResources().getInteger(R.integer.config_udfpsVendorCode);
     }
 
     /**
diff --git a/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintAuthenticationClient.java b/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintAuthenticationClient.java
index 79e3bf53..4eaaceba 100644
--- a/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintAuthenticationClient.java
+++ b/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintAuthenticationClient.java
@@ -142,7 +142,7 @@ class FingerprintAuthenticationClient extends AuthenticationClient<AidlSession>
     public void onAcquired(@FingerprintAcquired int acquiredInfo, int vendorCode) {
         // For UDFPS, notify SysUI with acquiredInfo, so that the illumination can be turned off
         // for most ACQUIRED messages. See BiometricFingerprintConstants#FingerprintAcquired
-        mSensorOverlays.ifUdfps(controller -> controller.onAcquired(getSensorId(), acquiredInfo));
+        mSensorOverlays.ifUdfps(controller -> controller.onAcquired(getSensorId(), acquiredInfo, vendorCode));
         super.onAcquired(acquiredInfo, vendorCode);
     }
 
diff --git a/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java b/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java
index f23659c9..d876827b 100644
--- a/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java
+++ b/services/core/java/com/android/server/biometrics/sensors/fingerprint/aidl/FingerprintEnrollClient.java
@@ -131,7 +131,7 @@ class FingerprintEnrollClient extends EnrollClient<AidlSession> implements Udfps
                 vibrateSuccess();
             }
             mSensorOverlays.ifUdfps(
-                    controller -> controller.onAcquired(getSensorId(), acquiredInfo));
+                    controller -> controller.onAcquired(getSensorId(), acquiredInfo, vendorCode));
         }
 
         mSensorOverlays.ifUdfps(controller -> {
diff --git a/services/core/java/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintAuthenticationClient.java b/services/core/java/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintAuthenticationClient.java
index d219a873..6021692c 100644
--- a/services/core/java/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintAuthenticationClient.java
+++ b/services/core/java/com/android/server/biometrics/sensors/fingerprint/hidl/FingerprintAuthenticationClient.java
@@ -59,6 +59,7 @@ class FingerprintAuthenticationClient extends AuthenticationClient<IBiometricsFi
     private static final String TAG = "Biometrics/FingerprintAuthClient";
 
     private final LockoutFrameworkImpl mLockoutFrameworkImpl;
+    @Nullable private final IUdfpsOverlayController mUdfpsOverlayController;
     @NonNull private final SensorOverlays mSensorOverlays;
     @NonNull private final FingerprintSensorPropertiesInternal mSensorProps;
     @NonNull private final CallbackWithProbe<Probe> mALSProbeCallback;
@@ -83,6 +84,7 @@ class FingerprintAuthenticationClient extends AuthenticationClient<IBiometricsFi
                 isStrongBiometric, taskStackListener, lockoutTracker, allowBackgroundAuthentication,
                 true /* shouldVibrate */, false /* isKeyguardBypassEnabled */);
         setRequestId(requestId);
+        mUdfpsOverlayController = udfpsOverlayController;
         mLockoutFrameworkImpl = lockoutTracker;
         mSensorOverlays = new SensorOverlays(udfpsOverlayController, sidefpsController);
         mSensorProps = sensorProps;
@@ -107,6 +109,15 @@ class FingerprintAuthenticationClient extends AuthenticationClient<IBiometricsFi
         return new ClientMonitorCompositeCallback(mALSProbeCallback, callback);
     }
 
+    @Override
+    public void onAcquired(int acquiredInfo, int vendorCode) {
+        super.onAcquired(acquiredInfo, vendorCode);
+        try {
+            mUdfpsOverlayController.onAcquired(getSensorId(), acquiredInfo, vendorCode);
+        } catch (Exception e) {
+        }
+    }
+
     @Override
     public void onAuthenticated(BiometricAuthenticator.Identifier identifier,
             boolean authenticated, ArrayList<Byte> token) {
-- 
2.38.0

